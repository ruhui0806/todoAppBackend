{"version":3,"sources":["components/NestModal.js","components/EditTask.js","components/todoItem.js","components/header.js","components/CreateNew.js","components/todoForm.js","App.js","index.js"],"names":["NestModal","toggleNestModal","nestModal","category","setUnstart","setInProgress","setComplete","setOverdue","setUngroup","toggle","isOpen","color","onClick","EditTask","props","id","TodoItem","urgent","useState","title","setTitle","description","setDescription","setNestModal","setCategory","updateTodo","modal","toggleModal","className","value","onChange","e","target","row","event","preventDefault","onUpdate","setModal","style","Topstyle","tag","autoCapitalize","item","class","handleUrgency","handleDelete","Header","backgroundColor","handleUrgent","CreateNew","addTodo","newTitle","newDescription","setCategoryFunc","onChangeTitle","onChangeDescription","TodoForm","shadow","paddingBottom","paddingLeft","paddingRight","type","newTodoTitle","App","setNewTodoTitle","todoList","setTodoList","setUrgent","useEffect","axios","get","then","res","data","console","log","handleDeleteFunc","deleteObj","filter","n","window","confirm","delete","alert","handleUrgentFunc","todo","changedTodo","put","map","catch","err","onUpdateFunc","FiterTodoList","task","UnstartTasks","InProgressTasks","CompleteTasks","OverdueTasks","Ungrouped","str","todoObj","charAt","toUpperCase","slice","post","concat","i","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2fbc20ef.chunk.js","sourcesContent":["import { Button, ButtonGroup, Modal, ModalHeader, ModalFooter } from 'reactstrap';\nimport React from \"react\";\n\nconst NestModal = ({ toggleNestModal, nestModal, category, setUnstart, setInProgress, setComplete, setOverdue, setUngroup }) => {\n\n\n    return (\n        <Modal toggle={toggleNestModal}\n            isOpen={nestModal}>\n\n\n            <ModalHeader>\n                Category\n            </ModalHeader>\n\n            <ButtonGroup>\n                <Button\n                    color=\"primary\"\n                    onClick={setUnstart}\n                >\n                    Unstart\n                </Button>\n                <Button\n                    color=\"primary\"\n                    onClick={setInProgress}\n                >\n                    In progress\n                </Button>\n                <Button\n                    color=\"primary\"\n                    onClick={setComplete}\n                >\n                    Complete\n                </Button>\n                <Button\n                    color=\"primary\"\n                    onClick={setOverdue}\n                >\n                    Overdue\n                </Button>\n                <Button\n                    color=\"primary\"\n                    onClick={setUngroup}\n                >\n                    Un-grouped\n                </Button>\n            </ButtonGroup>\n            <p>\n                Selected:{category}\n            </p>\n\n            <ModalFooter>\n                <Button\n                    color=\"primary\"\n                    onClick={toggleNestModal}\n                >\n                    Done\n                </Button>\n                {' '}\n                <Button onClick={toggleNestModal}>\n                    Cancel\n                </Button>\n            </ModalFooter>\n        </Modal>\n    )\n}\n\nexport default NestModal;","\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport React, { useState } from \"react\";\nimport NestModal from \"./NestModal\";\n\nconst EditTask = (props) => {\n\n    const id = props.TodoItem.id\n\n    const urgent = props.TodoItem.urgent\n    const [title, setTitle] = useState(props.TodoItem.title);\n    const [description, setDescription] = useState(props.TodoItem.description)\n    const [nestModal, setNestModal] = useState(false);\n    const [category, setCategory] = useState(props.TodoItem.category)\n\n    const updateTodo = { id, title, description, category, urgent }\n\n    const toggleNestModal = () => {\n        setNestModal(!nestModal)\n    }\n\n    const onSubmit = (event) => {\n        event.preventDefault();\n        props.onUpdate(id, updateTodo)\n        props.toggleModal()\n    }\n    // const Capitalize = (str) => {\n    //     return str.charAt(0).toUpperCase() + str.slice(1);\n    // }\n    return (\n        <div>\n            <Modal\n                // toggle={props.toggleModal}\n                isOpen={props.modal}\n            >\n                <ModalHeader toggle={props.toggleModal} className=\"form-group\" >Update Task</ModalHeader>\n                <ModalBody className=\"form-group\">\n                    <div>Title: <input value={title} onChange={(e) => setTitle(e.target.value)} className=\"form-control\" /></div>\n                    Description: <br />\n                    <textarea row=\"6\" value={description} onChange={(e) => setDescription(e.target.value)} className=\"form-control\" />\n                </ModalBody>\n\n                <ModalFooter>\n\n                    <Button\n                        color=\"success\"\n                        onClick={toggleNestModal}\n                    >\n                        {category}\n                    </Button>\n\n                    <NestModal toggleNestModal={toggleNestModal} nestModal={nestModal} category={category}\n                        setUnstart={() => setCategory(\"Unstart\")} setInProgress={() => setCategory(\"In progress\")}\n                        setComplete={() => setCategory(\"Complete\")} setOverdue={() => setCategory(\"Overdue\")} setUngroup={() => setCategory(\"Un-grouped\")} />\n\n                    <Button\n                        color=\"primary\"\n                        onClick={onSubmit}\n                    >\n                        Update\n                    </Button>\n                    {' '}\n                    <Button onClick={props.toggleModal}>\n                        Cancel\n                    </Button>\n\n                </ModalFooter>\n\n            </Modal>\n        </div>\n    )\n}\nexport default EditTask;","import React, { useState } from \"react\";\nimport { Button, Card, CardBody, CardTitle, CardText } from 'reactstrap';\nimport EditTask from \"./EditTask\";\n\nconst TodoItem = (props) => {\n    const [modal, setModal] = useState(false);\n    const toggleModal = () => {\n        setModal(!modal)\n    }\n\n    // const colors = [\n    //     {\n    //         primaryColor: \"#0E52E6\",\n    //         secondaryColor: \"#ECF3FC\"\n    //     },\n    //     {\n    //         primaryColor: \"#F5AD05\",\n    //         secondaryColor: \"#FEFAF1\"\n    //     },\n    //     {\n    //         primaryColor: \"#5DC250\",\n    //         secondaryColor: \"#F2FAF1\"\n    //     },\n    //     {\n    //         primaryColor: \"#F48687\",\n    //         secondaryColor: \"#FDF1F1\"\n    //     },\n    //     {\n    //         primaryColor: \"#B964F7\",\n    //         secondaryColor: \"#F3F0FD\"\n    //     }\n    // ]\n    // style={{ \"background-color\": colors[props.item.id % 5].primaryColor }}\n\n    return (\n        <Card className=\"todoItem\" style={props.Topstyle}>\n            {/* <div className=\"card-top\" style={{ \"background-color\": \"black\" }}></div> */}\n            <CardBody>\n                <CardTitle tag=\"h4\" className=\"font-link-2\" autoCapitalize=\"true\">\n                    {/* <input type=\"checkbox\" onClick={props.handleChange} checked={props.item.complete} /> <br /> */}\n                    {props.item.title}\n                </CardTitle>\n                <CardText className=\"font-link-3\">\n                    {props.item.description}\n                </CardText>\n                {/* style={{ \"position\": \"absolute\", \"left\": \"60%\", \"top\": \"80%\" }} */}\n                <Button color=\"\" className=\"position-absolute bottom-0 end-0\" >\n                    <i className=\"edit button pull-right\" class=\"bi bi-pencil-square\" onClick={() => setModal(true)} ></i>\n                    <i className=\"urgent button pull-right\" onClick={props.handleUrgency} class={props.item.urgent ? \"bi bi-flag-fill\" : \"bi bi-flag\"}></i>\n                    <i className=\"delete button pull-right\" onClick={props.handleDelete} class=\"bi bi-trash-fill\"></i>\n                </Button>\n            </CardBody>\n            <EditTask modal={modal} toggleModal={toggleModal} TodoItem={props.item}\n                onUpdate={props.onUpdate}\n            // title={TodoItem.title} description={TodoItem.description}\n\n            />\n        </Card>\n    )\n}\n\nexport default TodoItem\n","import React from 'react'\n\nconst Header = (props) => {\n  const style = {\n    backgroundColor: \"rgb(252, 198, 3)\"\n  }\n  return (\n    <header style={style} className=\"App-header text-center\">\n      <h2 className=\"font-link\" style={{ color: \"#001219\" }}>\n        To-do List\n      </h2>\n      <br />\n      <button className=\"btn btn-dark font-link\" onClick={props.handleUrgent}>{props.urgent ? \"Show All\" : \"Show Urgent\"}  <i className=\"urgent button\" onClick={props.handleUrgent} class={props.urgent ? \"bi bi-flag-fill\" : \"bi bi-flag\"}></i></button>\n\n    </header>\n  )\n}\nexport default Header\n\n\n","import React, { useState } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n// import NestModal from './NestModal';\n\nconst CreateNew = ({ modal, toggleModal, addTodo, newTitle, newDescription, urgent, category, setCategoryFunc, onChangeTitle, onChangeDescription, }) => {\n\n  // const [nestModal, setNestModal] = useState(false);\n\n  // const toggleNestModal = () => {\n  //   setNestModal(!nestModal)\n  // }\n\n  return (\n    <div>\n      <Modal\n        // toggle={toggleModal}\n        isOpen={modal}\n        urgent={urgent}\n      >\n        <ModalHeader toggle={toggleModal} className=\"form-group\" >Create Task</ModalHeader>\n        <ModalBody className=\"form-group\">\n          <div>Title: <input value={newTitle} onChange={onChangeTitle} className=\"form-control\" /></div>\n          Description: <br />\n          <textarea row=\"6\" value={newDescription} onChange={onChangeDescription} className=\"form-control\" />\n        </ModalBody>\n\n        <ModalFooter>\n\n          <Button\n            color=\"success\"\n            onClick={setCategoryFunc}\n          >\n            {category}\n          </Button>\n\n\n          <Button\n            color=\"primary\"\n            onClick={addTodo}\n          >\n            Create\n          </Button>\n          {' '}\n          <Button onClick={toggleModal}>\n            Cancel\n          </Button>\n\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n};\n\nexport default CreateNew;","import React, { useState } from \"react\";\nimport CreateNew from \"./CreateNew\";\n\nconst TodoForm = (props) => {\n    const [modal, setModal] = useState(false);\n    const toggleModal = () => {\n        setModal(!modal)\n    }\n    const style = {\n        backgroundColor: \"rgb(252, 198, 3)\",\n        shadow: \"#a5a5a5\"\n    }\n    return (\n        // <form style={style} className=\"text-center\" onSubmit={props.addTodo}>\n        //     <div style={{ paddingBottom: 10 }}>todo: <input value={props.newTodo} onChange={props.handletoDo} /></div>\n        //     {/* <div>Deadline: <input value={props.deadline} onChange={props.handleDeadline} /></div> */}\n        //     <div style={{ paddingBottom: 20 }} className=\"add\" ><button className=\"btn btn-primary\" type=\"submit\" onClick={() => setModal(true)}>Add New todo <i class=\"bi bi-pen-fill\"></i></button></div>\n        //     <CreateNew modal={modal} toggleModal={toggleModal} onSubmit={props.addTodo} />\n        // </form>\n        <div style={style} className=\"todoForm justify-content-center\">\n            <div style={{ paddingBottom: 10, paddingLeft: 5, paddingRight: 5 }} className=\"add\" ><button className=\"btn btn-dark font-link\" type=\"submit\" onClick={() => setModal(true)}>Create Task <i class=\"bi bi-plus-lg\"></i></button></div>\n            <CreateNew modal={modal} toggleModal={toggleModal} addTodo={props.addTodo}\n                newTitle={props.newTodoTitle} onChangeTitle={props.onChangeTitle}\n                newDescription={props.newDescription} onChangeDescription={props.onChangeDescription}\n                category={props.category} setCategoryFunc={props.setCategoryFunc} />\n        </div>\n    )\n}\n\nexport default TodoForm","import React, { useEffect, useState } from \"react\";\nimport './App.css';\nimport TodoItem from './components/todoItem';\nimport Header from './components/header';\nimport TodoForm from \"./components/todoForm\";\nimport NestModal from \"./components/NestModal\"\nimport axios from \"axios\";\n// import { Button, ButtonGroup, Modal, ModalHeader, ModalFooter } from 'reactstrap';\n// import 'bootstrap/dist/css/bootstrap.min.css';\n// import 'bootstrap-icons/font/bootstrap-icons.css';\n\n\nfunction App() {\n  const [newTodoTitle, setNewTodoTitle] = useState(\"\")\n  const [todoList, setTodoList] = useState([])\n  const [newDescription, setDescription] = useState(\"\")\n  const [category, setCategory] = useState(\"Un-grouped\")\n  const [nestModal, setNestModal] = useState(false);\n  const [urgent, setUrgent] = useState(false);\n\n  //fetch data from backend server and store it as todoList:\n  useEffect(() => {\n    axios\n      .get(\"/api/todoList\")\n      .then(res => res.data)\n      .then(res => {\n        console.log(\"promise fulfilled\")\n        setTodoList(res)\n      })\n  }, []) // the code is executed whenever the [] content is changed, namely when the page is refreshed\n\n  // const handleComplete = (id) => {\n  //   const todo = todoList.find(n => n.id === id)\n  //   const changedTodo = { ...todo, complete: !todo.complete }\n  // }\n\n  const Capitalize = (str) => {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  const onChangeTitle = (event) => {\n    // console.log(event.target.value)\n    setNewTodoTitle(event.target.value)\n  }\n\n  const onChangeDescription = (event) => {\n    setDescription(event.target.value)\n  }\n\n  const toggleNestModal = () => {\n    setNestModal(!nestModal)\n  }\n\n  const setCategoryFunc = () => {\n    setNestModal(!nestModal)\n\n  }\n\n  const addTodo = (event) => {\n    event.preventDefault()\n    console.log('A new todo is added!')\n    const todoObj = {\n      title: Capitalize(newTodoTitle),\n      description: newDescription,\n      urgent: false,\n      category: category\n    };\n    axios\n      .post(\"/api/todoList\", todoObj)\n      .then((res) => {\n        setTodoList(todoList.concat(res.data))\n      })\n    setNewTodoTitle(\"\")\n    setDescription(\"\")\n    setCategory(\"Un-grouped\")\n  }\n  const handleDeleteFunc = (id) => {\n    const deleteObj = todoList.filter(n => n.id === id)[0]\n    window.confirm('Do you confirm to delete this todo item?') ?\n      axios\n        .delete(`/api/todoList/${deleteObj.id}`)\n        .then(() => setTodoList(todoList.filter(n => n.id !== id)))\n      :\n      alert(\"this item will not be deleted!\")\n  }\n  const handleUrgent = () => {\n    setUrgent(!urgent)\n  }\n  const handleUrgentFunc = (id) => {\n    const todo = todoList.filter(n => n.id === id)[0]\n    const changedTodo = { ...todo, urgent: !todo.urgent }\n    axios\n      .put(`/api/todoList/${id}`, changedTodo)\n      .then((res) => { setTodoList(todoList.map(n => n.id === id ? res.data : n)) })\n      .catch(err => console.log(err))\n  }\n\n  const onUpdateFunc = (id, updateTodo) => {\n    axios\n      .put(`/api/todoList/${id}`, updateTodo)\n      .then((res) => { setTodoList(todoList.map(n => n.id === id ? res.data : n)) })\n      .catch(err => console.log(err))\n  }\n\n  const FiterTodoList = urgent ? todoList.filter(task => task.urgent === true) : todoList;\n\n  const UnstartTasks = FiterTodoList.filter(task => task.category === \"Unstart\");\n  const InProgressTasks = FiterTodoList.filter(task => task.category === \"In progress\");\n  const CompleteTasks = FiterTodoList.filter(task => task.category === \"Complete\");\n  const OverdueTasks = FiterTodoList.filter(task => task.category === \"Overdue\");\n  const Ungrouped = FiterTodoList.filter(task => task.category === \"Un-grouped\");\n\n\n  return (\n    <div className=\"App\">\n      <Header className=\"header text-center\" urgent={urgent} handleUrgent={handleUrgent} />\n      <TodoForm className=\"text-center\" newTodoTitle={newTodoTitle} onChangeTitle={onChangeTitle}\n        addTodo={addTodo} newDescription={newDescription} onChangeDescription={onChangeDescription}\n        category={category} setCategoryFunc={setCategoryFunc}\n      />\n\n      <div className=\"todo-wrapper container-fluid\">\n        <div className=\"row justify-content-evenly align-items-start gx-0\">\n          <div className=\"todo-column-1 col-sm-12 col-md-5 col-lg-2 order-lg-1\">\n            <h5 className=\"font-link text-center\">Unstart </h5>\n            {UnstartTasks.map(i => <TodoItem key={i.id} item={i} handleUrgency={() => handleUrgentFunc(i.id)} handleDelete={() => handleDeleteFunc(i.id)}\n              onUpdate={onUpdateFunc} Topstyle={{ \"background-color\": \"#006d77\" }} />)}\n          </div>\n          <div className=\"todo-column-2 col-sm-12 col-md-5 col-lg-2 order-lg-2\">\n            <h5 className=\"font-link text-center\">In progress </h5>\n            {InProgressTasks.map(i => <TodoItem key={i.id} item={i} handleUrgency={() => handleUrgentFunc(i.id)} handleDelete={() => handleDeleteFunc(i.id)}\n              onUpdate={onUpdateFunc} Topstyle={{ \"background-color\": \"#2A9D8F\" }} />)}\n          </div>\n          <div className=\"todo-column-3 col-sm-12 col-md-5 col-lg-2 order-lg-3\">\n            <h5 className=\"font-link text-center\">Complete </h5>\n            {CompleteTasks.map(i => <TodoItem key={i.id} item={i} handleUrgency={() => handleUrgentFunc(i.id)} handleDelete={() => handleDeleteFunc(i.id)}\n              onUpdate={onUpdateFunc} Topstyle={{ \"background-color\": \"#ffb703\" }} />)}\n          </div>\n          <div className=\"todo-column-4 col-sm-12 col-md-5 col-lg-2 order-lg-4\">\n            <h5 className=\"font-link text-center\">Overdue </h5>\n            {OverdueTasks.map(i => <TodoItem key={i.id} item={i} handleUrgency={() => handleUrgentFunc(i.id)} handleDelete={() => handleDeleteFunc(i.id)}\n              onUpdate={onUpdateFunc} Topstyle={{ \"background-color\": \"#F4A261\" }} />)}\n          </div>\n          <div className=\"todo-column-5 col-sm-12 col-md-5 col-lg-2 order-lg-5\">\n            <h5 className=\"font-link text-center\">Un-grouped </h5>\n            {Ungrouped.map(i => <TodoItem key={i.id} item={i} handleUrgency={() => handleUrgentFunc(i.id)} handleDelete={() => handleDeleteFunc(i.id)}\n              onUpdate={onUpdateFunc} Topstyle={{ \"background-color\": \"#e76f51\" }} />)}\n          </div>\n        </div>\n\n        <NestModal toggleNestModal={toggleNestModal} nestModal={nestModal} category={category}\n          setUnstart={() => setCategory(\"Unstart\")} setInProgress={() => setCategory(\"In progress\")}\n          setComplete={() => setCategory(\"Complete\")} setOverdue={() => setCategory(\"Overdue\")} setUngroup={() => setCategory(\"Un-grouped\")} />\n\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import './index.css';\n// import App from './App';\n\n\n// ReactDOM.render(\n//   <App />,\n//   document.getElementById('root')\n// );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap-icons/font/bootstrap-icons.css';\n\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}